
type A = array of int;

func foo(s:int, x:int):int
var i:int, j:int, c:int, a:A, aa:array of A, n:int;
{
    if (s % 100 == 0) then
        n = s / 100;
    else
        n = s / 100 + 1;
    
    allocate aa of length n;

    c = 2;
    for i = 0; i < n; i++ do
    {
        allocate a of length 100;
        aa[i] = a;

        for j = 0; j < 100; { j++; c++; } do
            a[j] = c;

        if (x < 100) then
            return a[x];
        
        x = x - 100;
    }

    return -100;
}
end foo

var b:A, i:int;

allocate b of length 10;

for i = 0; i < 10; i++ do
    b[i] = i + 1;

write b[5] + foo(600, 500);

write b[5];
write foo(600, 500);
